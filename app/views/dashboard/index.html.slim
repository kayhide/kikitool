.row
  .col-md-6.align-self-center.px-2
    = form_for Audio.new do |f|
      .input-group
        .custom-file
          = f.file_field :file, class: %w(custom-file-input)
          = f.label :file, class: %w(custom-file-label)
        .input-group-append
          = f.button type: :submit, class: %w(btn btn-success) do
            i.fas.fa-upload

.clearfix

.row
  - @transcriptions.each do |transcription|
    - audio = transcription.audio_blob.becomes(Audio)
    .col-sm-6.col-lg-3.p-2
      .card.glassy-light
        .card-body
          .dropdown.position-absolute.p-0.right-0.top-0.m-1
            .btn data-toggle="dropdown"
              i.fas.fa-ellipsis-h
            .dropdown-menu.dropdown-menu-right aria-labelledby="navbarDropdown"
              = link_to audio, method: :delete, class: %w(dropdown-item) do
                i.fas.fa-trash-alt.fa-fw>
                | Delete

          p
            i.fas.fa-play-circle.fa-fw>
            a href="#" data-sound=url_for(audio.blob)
              u= audio.filename
          p
            i.fas.fa-database.fa-fw>
            = number_to_human_size audio.byte_size
          p
            i.far.fa-clock.fa-fw>
            =l audio.created_at, format: :short
          p.position-relative
            - if transcription.completed?
              i.fas.fa-check.fa-fw.text-success>
              = link_to transcription, class: %w(stretched-link) do
                u = transcription.status
            - else
              i.fas.fa-spinner.fa-pulse.fa-fw.text-info>
              = transcription.status

- @transcriptions.filter(&:completed?).each do |transcription|
  .modal.fade id=dom_id(transcription) tabindex="-1" role="dialog"
    .modal-dialog role="document"
      .modal-content
        .modal-header
          button.close type="button" data-dismiss="modal" aria-label="Close"
            span aria-hidden="true" &times;
        .modal-body
          p = transcription.result&.dig("results", "transcripts", 0, "transcript")
